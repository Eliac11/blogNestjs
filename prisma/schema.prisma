// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}


model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  posts     Post[]
  profile   Profile?
  role      String   @default("user")

  createdAt DateTime @default(now())
}


model Profile {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id])
  userId   Int      @unique
  bio      String?
  avatar   String?
}


model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  posts       Post[]
}


model Tag {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  posts       Post[]
}


model Post {
  id          Int       @id @default(autoincrement())
  title       String
  content     String
  author      User      @relation(fields: [authorId], references: [id])
  authorId    Int
  categories  Category[]
  tags        Tag[]
  upvotes     Int       @default(0)
  downvotes   Int       @default(0)
  views       Int       @default(0)

  createdAt DateTime @default(now())
}


model PostView {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    Int
  createdAt DateTime @default(now())
  @@unique([postId, userId])
}

model PostReaction {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    Int
  reaction  Int 
  createdAt DateTime @default(now())
  @@unique([postId, userId])
}

